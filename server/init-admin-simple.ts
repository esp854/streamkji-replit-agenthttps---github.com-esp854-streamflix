import { config } from "dotenv";
import { Client } from 'pg';
import bcrypt from "bcryptjs";

// Charger les variables d'environnement
config();

/**
 * Version simplifi√©e de l'initialisation admin
 * Cr√©e directement l'admin sans v√©rifications complexes
 */
export async function initializeAdminSimple() {
  console.log("üîß Initialisation simplifi√©e de l'admin...");

  const databaseUrl = process.env.DATABASE_URL;

  if (!databaseUrl) {
    console.log("‚ö†Ô∏è Pas de DATABASE_URL - skipping");
    return;
  }

  const client = new Client({
    connectionString: databaseUrl,
    ssl: { rejectUnauthorized: false }
  });

  try {
    console.log("üîå Connexion DB...");
    await client.connect();
    console.log("‚úÖ Connect√©");

    const hashedPassword = await bcrypt.hash("admin123", 10);

    // Cr√©er ou mettre √† jour l'admin
    const query = `
      INSERT INTO users (username, email, password, role, "createdAt", "updatedAt")
      VALUES ('admin', 'admin@streamkji.com', $1, 'admin', NOW(), NOW())
      ON CONFLICT (email) DO UPDATE SET
        password = EXCLUDED.password,
        role = EXCLUDED.role,
        "updatedAt" = NOW()
    `;

    await client.query(query, [hashedPassword]);
    console.log("‚úÖ Admin cr√©√©/mis √† jour");

    await client.end();
    console.log("üéØ Initialisation termin√©e");

  } catch (error: any) {
    console.error("‚ùå Erreur:", error.message);
  }
}

// Ex√©cuter si appel√© directement
if (import.meta.url === `file://${process.argv[1]}`) {
  initializeAdminSimple().catch(console.error);
}