import { Client } from 'pg';

async function checkPostgres() {
  console.log("üîç V√©rification de PostgreSQL...");
  
  const databaseUrl = process.env.DATABASE_URL;
  
  if (!databaseUrl) {
    console.log("‚ùå DATABASE_URL environment variable is not set");
    console.log("   Please set the DATABASE_URL in your .env file");
    return;
  }
  
  const client = new Client({
    connectionString: databaseUrl,
    ssl: {
      rejectUnauthorized: false
    }
  });
  
  try {
    await client.connect();
    console.log("‚úÖ PostgreSQL est en cours d'ex√©cution");
    
    // Get PostgreSQL version
    const result = await client.query("SELECT version()");
    console.log(`üêò Version: ${result.rows[0].version}`);
    
    await client.end();
  } catch (error: any) {
    console.log("‚ùå PostgreSQL n'est pas accessible");
    
    if (error.code === 'ECONNREFUSED') {
      console.log("üí° Connexion refus√©e");
      console.log("   V√©rifiez que l'URL de la base de donn√©es est correcte");
    } else if (error.code === '28P01') {
      console.log("üí° Mot de passe incorrect");
      console.log("   V√©rifiez le mot de passe dans votre configuration");
    } else {
      console.log(`üí° Erreur: ${error.message}`);
    }
  }
}

checkPostgres().catch(console.error);